import numpy as np


def max_heapify(h: np.ndarray, i: int):
    izquierda = 2*i + 1
    derecha = 2*i + 2
    mayor = i
    
    if izquierda < len(h) and h[derecha] > h[mayor]:
        mayor = izquierda
    if derecha < len(h) and h[derecha] > h[mayor]:
        mayor = derecha

    if mayor != i:
        h[i], h[mayor] = h[mayor], h[i]
        max_heapify(h, mayor)


def insert_maxheap(h: np.ndarray, k: int) -> np.ndarray:

    n = len(h)
    h = np.append(h, k)
    i = n
    
    while i > 0 and h[i] > h[(i-1)//2]:
        h[i], h[(i-1)//2] = h[(i-1)//2], h[i]
        i = (i-1)//2
    
    return h


def create_maxheap(h: np.ndarray):

    for i in range((len(h)//2)-1, -1, -1):
        max_heapify(h, i)


